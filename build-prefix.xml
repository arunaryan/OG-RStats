<project name="og-rstats-prefix">

	<property environment="env" />
	<property file="${user.home}/.OG-Build-common.properties" />
	<property file="${basedir}/build.properties" />
	<property file="${common.dir}/build.properties" />
	<property file="${og.language.file}" />

	<!--	Stock code to bootstrap the OG-Language build system; alternatively specify og.language.dir in
		the environment or project build properties -->
	<available property="og.language.dir.verified" value="${og.language.dir}" file="${og.language.dir}/build-suffix.xml" />
	<target name="fetch-og-language-build" unless="og.language.dir.verified">
		<echo>Bootstrapping OG-Language build system</echo>
		<subant genericantfile="${common.dir}/common.xml" buildpath="${basedir}" target="resolve" inheritall="true" failonerror="false" />
		<available property="og.language.found" file="${lib.dir}/source/com.opengamma/og-language" />
		<condition property="og.language.dir.raw" value="${build.dir}/og-language" else="${basedir}/../OG-Language">
			<isset property="og.language.found" />
		</condition>
		<pathconvert targetos="unix" property="og.language.dir.verified">
			<path location="${og.language.dir.raw}" />
		</pathconvert>
		<antcall target="unzip-og-language-build" />
		<echo file="${og.language.file}">og.language.dir=${og.language.dir.verified}</echo>
	</target>
	<target name="unzip-og-language-build" if="og.language.found">
		<unzip dest="${og.language.dir.verified}" overwrite="true">
			<fileset dir="${lib.dir}/source/com.opengamma/og-language">
				<include name="*-build-*.zip" />
			</fileset>
		</unzip>
	</target>

</project>
